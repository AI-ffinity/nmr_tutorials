## protein HSP90 (25 kDa) on 850 MHz spectrometer

## Below I try to summarize the steps undertaken in chronological order, the commands issued and their function.
## The goal is to set-up measurement of multiple 2D planes of the various 4D HCNH NOESY pulse programs and launch them one by one
## using `zg`. Based on their quality we will choose the right 4D pulse program for this protein sample.

`1s te`: set the temperature.
`lock`: opens a dialog box with the list of solvents. When you select a solvent and click OK, it reads the lock parameters for that solvent from the lock table which has been set up 
with the command edlock and performs an autolock. The autolock procedure is also suitable for solvents with multiple lock signals. For each solvent with multiple signals only one 
lock signal is defined in the edlock table. We select "90% H2O and 10% D2O" solvent.
`edasp`:
`p1, `p3`, `p21`: display pulse values.
`atma`: automatic tuning and matching for every nucleus in the spectrum; it must be repeated for every sample and spectrometer. It is inperfect thus we must manually correct it after it ends. 
`atmm`: You have to manually move the well so its bottom matches with the red vertical line. Warning: every nucleus you correct the rest may be spoiled. We adjust two parameters:
1) "Tuning" adjusts the resonant frequency of the probe circuit to match the Larmor frequency of the nuclei being observed (e.g., ^1H, ^13C). This ensures that the probe is resonant at the exact frequency needed to excite the nuclei, allowing for efficient energy transfer and optimal signal detection.
2) "Matching" adjusts the impedance of the probe circuit to match the impedance of the transmission line (usually 50 ohms). Proper matching minimizes the reflection of RF energy back to the transmitter, ensuring that the maximum amount of power is delivered to the sample and that the received signal is efficiently transferred to the receiver.
`topshim gui`: automatic shimming - homogenizes the magnetic field in z and xy axes. There is automatic option and manual.
`loopadj`: optimize the lock parameters LGAIN (loop gain), LTIME (loop time) and LFILTER (loop filter).
`pulsecalc`: calibrates the pulse lengths (prosol: `getprosol` has the precalibrated parameters based on a test sample but they are not optimal for other samples). This calibration is mostly needed for H because the values of C and N don't change that much.
`getprosol [NUC{Fx} P1{Fx} PLW1{Fx}] <- values for 1H, 13C, 15N`:     Fx: is the dimension name (F1, F2, F3, or F4); NUC{Fx}: the nucleus name ("1H", "15N", or "13C"); P1{Fx}: the length of the 90° hard pulse in μsec; PLW1{Fx}: the power level of the 90° hard pulse in W or dB (you must specify the unit of measurement in the input). E.g. `getprosol 1H 13.29 14.529W 13C 12.0 162.93W 15N 37.8 169.82W`
`O1`: sets the spectral center in the given dimension.
`O1P`, `O2P`, `O3P`: sets the transmitter frequency offset (ppm) of the 1st, 2nd and 3rd nucleus
`D1`, `D2`, `D3`, ..., `D8`: delays (sec)
`ZGOPTNS`: allows you to set an option to acquisition commands like `zg` and `go`. Whatever you write there is copied verbatim to the compiler that expands the pulse-program’s C-style pre-processor directives (#ifdef …). Each token you place in ZGOPTNS must therefore look like a C macro definition, i.e. -D<FLAG>. Setting or clearing a flag lets one and the same pulse programme behave in very different ways (water suppression on/off, selective-pulse calculation, “double-label” decoupling, etc.) without editing the code.
E.g. "-DCALC_SP -DLABEL_CN"
| Flag         | Typical pulse-sets that look for it                      | What it switches on                                                                                                                                                  | Practical effect                                                                                                                                                                                                            |
| ------------ | -------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| `-DLABEL_CN` | All Bruker triple-resonance (HNCA, HNCACB, TROSY, HSQC…) | Branches that expect **double-labelled** (¹³C/¹⁵N) samples                                                                                                           | Adds **¹³C decoupling** during ¹⁵N evolution and adapts delays that depend on the ¹J<sub>CN</sub> coupling; pulse lengths `P22`, power level `PL2` etc. are un-commented |
| `-DCALC_SP`  | “Best”/“b\_…” selective or BEST-TROSY sequences          | Activates a small *calculator* block that derives **band-selective ¹H 90°/180° shapes** from the user constants `cnst54`/`cnst55` each time you start the experiment | You only have to type the desired *bandwidth & offset*; the sequence generates and loads the correct soft-pulse on the fly                                                                       |

| Flag                              | Typical purpose                                                                                | 
| --------------------------------- | ---------------------------------------------------------------------------------------------- | 
| `-DPRESAT`                        | Use a *continuous-wave presaturation* block during `d1` instead of WATERGATE                   | 
| `-DWG` or `-DWATERGATE`           | Use *WATERGATE* solvent suppression instead of presat                                          | 



## Now iterate through all the 2D plane experiments that you setup and launch them one by one
using `zg` (they will be added to the queue). Based on their quality we will choose the right 4D pulse program for
this protein sample.

## The remaining of the process involves creating a 4D HCNH NOESY experiments and copying values of the folowing
## parameters (among others) from the selected 2D plane experiments:
SW{Fx}: spectral widths
IN_F{s} [μsec]: increment for delay
CNST{2,4,16,18,19}{Fx}: various constants for 1H nucleous (maybe also for 13C and 15N).
	
Then run again the same `getprosol` command-line, e.g. `getprosol 1H 13.29 14.529W 13C 12.0 162.93W 15N 37.8 169.82W`
`SPNAM26{F4}` or `SPNAM1{F4}`: file name for shaped pulse
`P1{F4}` or `P17{F4}`: one of the shaped pulses

MISCELLANEOUS COMMANDS:
`ased`: edit acquisition parameters used in pulse program
`qfp`: a macro that applies a quadrature sine bell window function (qsin), performs a Fourier Transform, and then phase correction (fp).

NOTES:
- For each nucleus there are calibration spectra that are used to adjust the parameters of all pulse sequences to the given sample (see Radek's explanation in the video). I think Topspin has some default calibration spectra that need to be manually adjusted before optimizing the parameters of each pp.
- Radek by "number of increments" means the parameter `TD` the controls the resolution.
- If a nucleus relaxes relatively slow, then increasing the TD parameter value will increase the resolution of its signals in the spectrum.
- In a nucleous relaxes fast (e.g. in the course of 1000 increments) then increasing the TD parameter (e.g. from 2048 to 4096) will result in recording more noise.
- Increasing the number of scans increases the S/N.
- [p1; 1:01:29] the signal intensity in the FID drops rapidly at the beginning and slower later. After some point the FID intensities are small and remain like that [p1; 1:01:36]. So even if we measured more, the spectral quality wouldn't increase.
 
