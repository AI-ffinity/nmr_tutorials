REFERENCES:
	http://nmrwiki.org/wiki/index.php?title=Plotting_spectra_with_Sparky
	http://www.nmr2.buffalo.edu/nesg.wiki/Resonance_Assignment/Sparky
	


 Common Sparky Commands

There are numerous useful two-letter commands that can speed up spectral analysis in Sparky.  Here is a list of commonly used accelerators:

a1, a2, a3:  add SW to peak in F1, F2, F3 dimension; for aliased spectra
A1, A2, A3:  subtract SW from peak in F1, F2, F3 dimension; for aliased spectra
at:  assignment tool; for assigning a peak
cl:  adjust colour of ornament
ct:  adjust contour levels and colours:
dr:  delete resonances not used in any peak assignment (cleans up resonance list)
eu:  undo last peak manipulation
it:  integration tool
kr:  restrictive peak picking tool
lt:  opens the peak list for a given spectrum; various options in here
oc:  ornament copy; for copying assignment/label information between spectra
ol:  overlay views; useful for comparing spectra
op: ornament paste
oz:  adjust size of ornament
pa:  select all peaks in a spectrum
pc:  peak center
pv:  list of sizes and peak counts in all open spectra
rl:   resonance list for the project; various functions and displays in there
rp:  read in a list of peaks in sparky format (i.e. from AutoAssign or PINE), aka load sparky list file with assignments to existing spectrum:
    Assignment         w1         w2  
      Q47NE2-HE22    110.585      6.621 
      Q77NE2-HE22    111.920      6.782 
      N29ND2-HD22    111.860      6.792 
      N73ND2-HD22    111.747      6.806 
      N39ND2-HD22    111.951      6.842 
      N85ND2-HD22    111.527      6.876 
      N64ND2-HD22    114.934      6.913 
           G50N-H    106.253      7.121 
      Q47NE2-HE21    110.576      7.267 
            85N-H    110.658      7.322 
     However, it doesn't seem to handle peaks with assignments not following the convention [A-Z][0-9]+[A-Z0-9']+\-[A-Z0-9']. Use instead my script that 
     modifies the .save file and thus it can handle any peak name. 
rr:  resonance rename
st:  spectrum tool; useful for global axes shift corrections
tb:  table of resonances for the project:  useful for seeing missing assignments
vc:  view centering; useful for going to a specific peak in a 3D selected in a 2D
vd:  view duplicate; duplicate view of a spectrum into another window
vR:  show assignments on edge of spectrum
vS:  show 1D slice on edge of spectrum
vt:  view settings; a variety of spectral settings including aspect ratio
xa:  show nucleus type on axis
xe:  special Python command for saving peak list in xeasy format
xr:  roll axes; useful for 3D and 4D spectra
xx:  axis transpose
yt:  synchronize axes of various spectra: useful for analyzing series of 3D’s
zf, zi, zo, zp:  zoom full spectrum, zoom in, zoom out, zoom previous

Commonly used pointer modes (for the mouse):
    F1: selection mode
    F6:  add a label
    F7:  add a line
    F8:  peak picking mode
    F10:  integration mode
    F11:  zoom mode
    
    
    
    

To rename the pseudo-residue groups to the real atom names, create a file with the protein sequence like this:
$ cat prot.seq 
GAMANVKRRTHNVLERQRRNELKRSFFALRDQIPELENNEKAPKVVILKKATAYILSVQAEEQKLISEEDLLRKRR
EQLKHKLEQLRNS

Create a list with the desired substitutions:
$ gen_rr_list.pl prot.seq 349 rr.list

And then modify all spectra labels:
$ for fname in HNcaCB.save CBCAcoNH.save HNCA.save HNcaCO.save 15Nfull.save HNCO.save;
	do /usr/local/bin/rename_resonances.csh $fname rr.list ;
done

If you are sure about the changes you can rename the files so that you won't need to modify the project:
$ for fname in HNcaCB.save CBCAcoNH.save HNCA.save HNcaCO.save 15Nfull.save HNCO.save;
	do mv ${fname}_ok $fname
done

Now rename resonances in the project file:
$ cd ../Projects
$ /usr/local/bin/rename_resonances.csh mars.proj ../Save/rr.list

Now check the resonaces before and after renaming:
$ cd /home/kostas/Sparky.MARS_group_names/Projects
$ for CS in $(egrep "\|" mars.proj | awk '{print $2}');
	do  [ $(grep "$CS" ../../Sparky/Projects/mars.proj | wc -l) -eq 0 ] && echo "$(grep $CS ./mars.proj)   is missing"; 
done

If you are sure about the change rename the project
$ mv mars.proj_ok mars.proj

Prepare a file for secondary structure prediction with δ2d from the table of chemical shifts:
$ awk '{print substr($1,2),substr($1,1,1), $6, $2, $3, $4, $11, $5}' H_N_CO_CA_CB_HA_HB_shifts.forSSprediction.list | awk "NR>1" | perl -pi -e "s/-/0/g" > H_N_CO_CA_CB_HA_HB_shifts.forDelta2d.SHIFTY.list
# awk '{print substr($1,2),substr($1,1,1), $10, $4, $5, "-", $24, $22}' H_N_CO_CA_CB_HA_HB_shifts.forSSprediction.list | awk "NR>1" | perl -pi -e "s/-/0/g" > H_N_CO_CA_CB_HA_HB_shifts.forDelta2d.SHIFTY.list

Prepare a file for secondary structure prediction with RCI
$ awk '{print substr($1,2),substr($1,1,1), $6, $5, $11, $2, $3, $4}' H_N_CO_CA_CB_HA_HB_shifts.forSSprediction.list | awk "NR>1" | perl -pi -e "s/-/0/g" > H_N_CO_CA_CB_HA_HB_shifts.forRCI.SHIFTY.list

One you have the secondary structure populations from delta2d you can draw a multi-barplot with gnu:
$ awk '{print $2, $3, $4, $5, $6}' delta2d_SS_prediction.dat > delta2d_SS_prediction.forGNUPLOT.dat

Then draw the multi-barplot as explained in ~/Documents/Commandlines_and_Hints/GNUPLOT/draw_multi-barplot.sh
To compare with available chemical shifts of another structure in BMRB follow the instructions in ~/Documents/Commandlines_and_Hints/NMR/Convert_BMRB_star_2_SHIFTY_format.sh


##### IMPORT 3D PROTEIN ASSIGNMENTS INTO 2D PEPTIDE SPECTRA #####
Load the whole project of 3D protein spectra into Sparky and save the resnance table with "tb". Then modify the resonance to contain only the peptide residues and do:

$ awk '{if(NR>1){printf "   %sCA-HA   %s   %s\n", $1, $2, $6}}' 23mer_H_N_CO_CA_CB_HA_HB_shifts.list > 23mer_CA-HA_from_3Dspectra.list
$ awk '{if(NR>1){printf "   %sCB-HB   %s   %s\n", $1, $3, $7}}' 23mer_H_N_CO_CA_CB_HA_HB_shifts.list | egrep -v "\s+\-" > 23mer_CB-HB_from_3Dspectra.list
$ awk '{if(NR>1){printf "   %sCB-HB2   %s   %s\n", $1, $3, $8}}' 23mer_H_N_CO_CA_CB_HA_HB_shifts.list | egrep -v "\s+\-" >> 23mer_CB-HB_from_3Dspectra.list
$ awk '{if(NR>1){printf "   %sCB-HB3   %s   %s\n", $1, $3, $9}}' 23mer_H_N_CO_CA_CB_HA_HB_shifts.list | egrep -v "\s+\-" >> 23mer_CB-HB_from_3Dspectra.list

Then import the resonance list into the 13-HSQC window using "rb". Select a peak, click "Guessing", w1 group ->i, range -> , w2 group -> i, range -> . Range is the stdev
used to match resonances.
For the 15N-HSQC do:

$ awk '{if(NR>1){printf "   %sN-HN   %s   %s\n", $1, $11, $5}}' 23mer_H_N_CO_CA_CB_HA_HB_shifts.list > 23mer_N-HN_from_3Dspectra.list

and then load it with "rp" into the peptide 15N-HSQC window.
